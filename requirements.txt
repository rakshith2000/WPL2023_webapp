# Sample input text
$text = @"
ORACLE_SID:JRMAN and Table space name:SAMPLE
...
Data for Logging:
TABLESPACE_NAME                FILE_NAME                                                    Size MB Max. MB  by MB Auto
------------------------------ ------------------------------------------------------------ ------- ------- ------ ----
SAMPLE                         /x01/oradata/JRMAN/sample01.dbf                                4,096  10,240      0 YES
SAMPLE                         /x01/oradata/JRMAN/sample02.dbf                                2,048  10,240      0 YES
SAMPLE                         /x01/oradata/JRMAN/sample03.dbf                                1,024  10,240      0 YES
SAMPLE                         /x01/oradata/JRMAN/sample04.dbf                                2,048  10,240      0 YES
SAMPLE                         /x01/oradata/JRMAN/sample05.dbf                                2,048  10,240      0 YES
SAMPLE                         /x01/oradata/JRMAN/sample06.dbf                                5,120  11,264      0 YES
SAMPLE                         /x01/oradata/JRMAN/sample07.dbf                                5,120  10,240      0 YES
SAMPLE                         /x01/oradata/JRMAN/sample08.dbf                                5,120  11,264      0 YES
SAMPLE                         /x01/oradata/JRMAN/sample09.dbf                                5,120   5,120      0 YES
dfnewname - /x01/oradata/JRMAN/sample09.dbf
en_latfile - /x01/oradata/JRMAN/sample09.dbf    
en_action - Resize
en_stat - 5120
dfae - YES
"@

# Step 1: Split the input lines
$lines = $text -split "`n"

# Step 2: Find the start of the data table
$dataStart = ($lines | Select-String -Pattern "Data for Logging:").LineNumber
$tableStart = $dataStart + 2  # Skip header and dashes

# Step 3: Extract table rows until hitting non-table content
$tableData = @()
for ($i = $tableStart; $i -lt $lines.Count; $i++) {
    $line = $lines[$i].Trim()
    if ($line -match "^\w+.*\s+\d{1,3},*\d*\s+\d{1,3},*\d*\s+\d+\s+(YES|NO)$") {
        $fields = $line -split '\s{2,}'  # Split on 2+ spaces
        $tableData += [PSCustomObject]@{
            TABLESPACE_NAME = $fields[0]
            FILE_NAME       = $fields[1]
            SIZE_MB         = $fields[2]
            MAX_MB          = $fields[3]
            INCR_BY_MB      = $fields[4]
            AUTO            = $fields[5]
        }
    } else {
        break
    }
}

# Step 4: Extract the remaining variables
$remainingLines = $lines[$i..($lines.Count - 1)] | Where-Object { $_ -match "-" }

$variables = @{}
foreach ($line in $remainingLines) {
    if ($line -match "^\s*(\S+)\s*-\s*(.+)$") {
        $variables[$matches[1]] = $matches[2].Trim()
    }
}

# Output
$tableData         # Array of table row objects
$dfnewname  = $variables["dfnewname"]
$en_latfile = $variables["en_latfile"]
$en_action  = $variables["en_action"]
$en_stat    = $variables["en_stat"]
$dfae       = $variables["dfae"]

# Display variables (optional)
Write-Host "`ndfnewname:  $dfnewname"
Write-Host "en_latfile: $en_latfile"
Write-Host "en_action:  $en_action"
Write-Host "en_stat:    $en_stat"
Write-Host "dfae:       $dfae"