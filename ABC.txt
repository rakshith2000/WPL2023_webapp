import tkinter as tk
from tkinter import ttk
import psutil
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

class SystemMonitorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("System Health Dashboard")
        self.root.geometry("900x600")
        self.root.configure(bg="#222831")
        
        ttk.Label(root, text="System Health Dashboard", font=("Helvetica", 20, "bold"), 
                  foreground="white", background="#222831").pack(pady=15)
        
        self.gauge_frame = tk.Frame(root, bg="#222831")
        self.gauge_frame.pack()
        
        self.fig, self.axs = plt.subplots(2, 2, subplot_kw={'projection': 'polar'}, figsize=(8, 5))
        self.fig.patch.set_facecolor("#222831")
        self.canvas = FigureCanvasTkAgg(self.fig, master=self.gauge_frame)
        self.canvas.get_tk_widget().pack()
        
        self.update_data()
    
    def update_data(self):
        cpu_usage = psutil.cpu_percent(interval=1)
        mem_usage = psutil.virtual_memory().percent
        disk_c_usage = psutil.disk_usage('C:\\').percent
        disk_d_usage = psutil.disk_usage('D:\\').percent if len(psutil.disk_partitions()) > 1 else 0
        
        self.update_gauge(self.axs[0, 0], cpu_usage, "CPU Usage")
        self.update_gauge(self.axs[0, 1], mem_usage, "Memory Usage")
        self.update_gauge(self.axs[1, 0], disk_c_usage, "Disk C: Usage")
        self.update_gauge(self.axs[1, 1], disk_d_usage, "Disk D: Usage")
        
        self.root.after(1000, self.update_data)
    
    def update_gauge(self, ax, usage, label):
        ax.clear()
        ax.set_theta_direction(-1)
        
        color = "#4dab6d" if usage < 80 else "#f6ee54" if usage < 95 else "#ee4d55"
        
        ax.bar(x=np.radians(180), width=np.radians(180), height=0.5, bottom=1, 
               color='lightgray', edgecolor='white', linewidth=2, align='edge')
        
        ax.bar(x=np.radians(180), width=np.radians(180 * usage / 100), height=0.5, bottom=1, 
               color=color, edgecolor='white', linewidth=2, align='edge')
        
        ax.set_ylim(0, 2)
        ax.set_xticks(np.radians([0, 45, 90, 135, 180]))
        ax.set_xticklabels(['0%', '25%', '50%', '75%', '100%'], color='white')
        ax.set_title(f'{label}: {usage:.1f}%', pad=10, fontsize=12, fontweight='bold', color='white')
        ax.grid(False)
        ax.set_axis_off()
        
        self.canvas.draw()

root = tk.Tk()
app = SystemMonitorApp(root)
root.mainloop()
