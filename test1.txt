def update_gui_after_metrics(self):
    self.display_metrics()
    self.export_btn.config(state="normal")  # Enable export button now that we have data
    self.update_timestamp()  # Add this line to update the timestamp

self.timestamp_label = None  # To store the timestamp label widget

def update_timestamp(self):
    # Get current time in UTC
    utc_now = datetime.now(pytz.utc)
    
    # Convert to IST
    ist = utc_now.astimezone(pytz.timezone('Asia/Kolkata'))
    ist_str = ist.strftime('%d-%m-%Y %H:%M:%S IST')
    
    # Convert to US Central Time (you can change this to any US timezone you prefer)
    us_central = utc_now.astimezone(pytz.timezone('America/Chicago'))
    us_str = us_central.strftime('%d-%m-%Y %H:%M:%S CT')
    
    timestamp_text = f"Last Updated:\n{ist_str}\n{us_str}"
    
    # Create or update the timestamp label
    if self.timestamp_label is None:
        self.timestamp_label = ttkb.Label(
            self.left_pane,  # We'll need to store left_pane as an instance variable
            text=timestamp_text,
            font=("Calibri", 10),
            bootstyle="secondary",
            justify="center"
        )
        self.timestamp_label.pack(fill="x", pady=(20, 0))
    else:
        self.timestamp_label.config(text=timestamp_text)


def create_left_pane(self):
    style = ttkb.Style()
    style.configure('Overview.TButton', font=('Calibri', 14, 'bold'))
    style.configure('Export.TButton', font=('Calibri', 12, 'bold'))
    
    self.left_pane = ttkb.Frame(self, padding=10, bootstyle=LIGHT, width=220)  # Store as self.left_pane
    self.left_pane.grid(row=1, column=0, sticky="ns")
    self.left_pane.grid_propagate(False)

    self.overview_btn = ttkb.Button(
        self.left_pane,
        text="JDA Overview",
        bootstyle="success",
        style='Overview.TButton',
        command=self.start_metrics_collection_thread
    )
    self.overview_btn.pack(fill="x", pady=(0, 20))
    self.export_btn = ttkb.Button(
        self.left_pane,
        text="Export Data",
        bootstyle="info",
        style='Export.TButton',
        command=self.export_to_excel,
        state="disabled"  # Initially disabled
    )
    self.export_btn.pack(fill="x", pady=(0, 20))
