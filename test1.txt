class SystemHealthCheckDashboard(ttkb.Frame):
    # ... existing code ...

    def start_metrics_collection_thread(self):
        self.export_btn.config(state="disabled")
        
        # Only show loading label if it's the first run
        if not hasattr(self, 'initial_load_complete'):
            for widget in self.content_frame.winfo_children():
                widget.destroy()
            self.loading_label = ttkb.Label(
                self.content_frame,
                text="Collecting metrics from servers...",
                font=("Calibri", 14, "bold"),
                bootstyle=INFO
            )
            self.loading_label.pack(expand=True)
            self.content_frame.update()
            
        """Start a thread to collect metrics."""
        self.overview_btn.config(state="disabled")
        threading.Thread(target=self.update_all_metrics).start()

    def update_gui_after_metrics(self):
        # Mark initial load as complete
        self.initial_load_complete = True
        
        # Remove loading label if it exists
        if hasattr(self, 'loading_label'):
            self.loading_label.destroy()
            del self.loading_label
            
        self.display_metrics()
        self.export_btn.config(state="normal")
        self.update_timestamp()
        
        # Schedule next refresh
        if self.refresh_timer:
            self.after_cancel(self.refresh_timer)
        self.refresh_timer = self.after(self.refresh_interval, self.start_metrics_collection_thread)

    # ... rest of existing code ...
