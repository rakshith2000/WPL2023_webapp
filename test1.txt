import tkinter as tk
from tkinter import ttk
import ttkbootstrap as ttk

class ScrollableFrame(ttk.Frame):
    def __init__(self, container, *args, **kwargs):
        super().__init__(container, *args, **kwargs)
        
        # Create canvas and scrollbar
        self.canvas = tk.Canvas(self, highlightthickness=0)
        self.scrollbar = ttk.Scrollbar(self, orient="vertical", command=self.canvas.yview)
        self.scrollable_frame = ttk.Frame(self.canvas)
        
        # Configure scroll region when size changes
        self.scrollable_frame.bind(
            "<Configure>",
            lambda e: self.canvas.configure(
                scrollregion=self.canvas.bbox("all")
            )
        )
        
        # Create window in canvas for the frame
        self.canvas.create_window((0, 0), window=self.scrollable_frame, anchor="nw")
        
        # Configure canvas
        self.canvas.configure(yscrollcommand=self.scrollbar.set)
        
        # Pack elements
        self.canvas.pack(side="left", fill="both", expand=True)
        self.scrollbar.pack(side="right", fill="y")
        
        # Bind mousewheel for scrolling
        self.canvas.bind_all("<MouseWheel>", self._on_mousewheel)
        
        # Handle frame width properly
        self.scrollable_frame.bind("<Configure>", self._frame_configure)
    
    def _on_mousewheel(self, event):
        self.canvas.yview_scroll(int(-1*(event.delta/120)), "units")
    
    def _frame_configure(self, event):
        # Update the canvas's width to fit the inner frame
        self.canvas.configure(width=self.scrollable_frame.winfo_reqwidth())

# Example usage
root = ttk.Window(themename="cosmo")
root.geometry("400x600")

scroll_frame = ScrollableFrame(root)
scroll_frame.pack(fill="both", expand=True)

# Add content
for i in range(50):
    ttk.Label(scroll_frame.scrollable_frame, text=f"Item {i}").pack(pady=5, padx=10, anchor="w")

root.mainloop()
